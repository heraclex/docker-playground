version: '3.1'
services:

  centos7-java8:
    build:
      context: ./centos7-java8
      dockerfile: Dockerfile
    image: local/centos7-java8
    container_name: centos7-java8
    volumes:
      - ./.shared:/root/shared

  metastore:
    build:
      context: ./metastore
      dockerfile: Dockerfile
    container_name: metastore
    image: local/metastore
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - ./.storage/postgres:/postgres/shared
    privileged: true

  hive:
    build:
      context: ./hive
      dockerfile: Dockerfile
    container_name: hive
    image: local/hive
    ports:
      - '9083:9083'      
    depends_on:
      - centos7-java8
      - metastore
      - minio

  minio:
    build:
      context: ./minio
      dockerfile: Dockerfile
    container_name: minio
    image: local/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - '9000:9000'
      - "9001:9001"
    volumes:
      - ./.storage/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    depends_on:
      - centos7-java8
  
  spark-master:
    container_name: spark-master
    image: local/spark-master
    build:
      context: ./spark
      dockerfile: Dockerfile
    # restart: unless-stopped
    ports:
      - 4040:4040
      - 7077:7077
      - 8080:8080
      - 18080:18080 
    command: sh spark-master.sh

  spark-worker:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-worker
    image: local/spark-worker
    # restart: unless-stopped
    ports:
      # - "8081-8085:8081"
      - 8081:8081
    command: sh spark-worker.sh

  trino-coordinator:
    container_name: trino-coordinator
    image: local/trino-coordinator
    build:
      context: ./trino
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./trino/coordinator_config.properties:/usr/trino/etc/config.properties
      - ./trino/etc/catalog:/usr/trino/etc/catalog

  trino-worker:
    container_name: trino-worker
    image: local/trino-worker
    build:
      context: ./trino
      dockerfile: Dockerfile
    volumes:
      - ./trino/worker_config.properties:/usr/trino/etc/config.properties
      - ./trino/etc/catalog:/usr/trino/etc/catalog
