

services:

  # centos7:
  #   build:
  #     context: ./centos7
  #     dockerfile: Dockerfile
  #   image: local/centos7
  #   container_name: centos7
  #   volumes:
  #     - ./.shared:/root/shared
  
  # centos8:
  #   build:
  #     context: ./centos8
  #     dockerfile: Dockerfile
  #   image: local/centos8
  #   container_name: centos8
  #   volumes:
  #     - ./.shared:/root/shared

  postgres:
    profiles: [airflow]
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    hostname: postgres-db # host name in virtual private network inside docker (used to connect from other service)
    image: local/postgres:latest
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        # METABASE_DB_USER: metabase
        # METABASE_DB_PASS: metabase
        # METABASE_DB_NAME: metabase
        # AIRFLOW_DB_USER: airflow
        # AIRFLOW_DB_PASS: airflow
        # AIRFLOW_DB_NAME: airflow
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/.storage/data:/var/lib/postgresql/data
    command: ["postgres", "-c", "log_statement=all"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    privileged: true
    networks:
      - delta-net

  # metabase:
  #   profiles: [metabase]
  #   container_name: metabase
  #   image: local/metabase:v0.45.2-databricks
  #   restart: always
  #   ports:
  #     - '3001:3000'
  #   volumes:
  #     # declare your mount volume /host/dir:/container/dir
  #     - ./.storage/metabase:/metabase-data
  #   environment:
  #     MB_DB_TYPE: postgres
  #     MB_DB_DBNAME: metabase
  #     MB_DB_PORT: 5432
  #     MB_DB_USER: metabase
  #     MB_DB_PASS: metabase
  #     MB_DB_HOST: postgres-db
  #   depends_on:
  #     - postgres
  #   links:
  #     - postgres
  #   networks:
  #     - delta-net

  # hive:
  #   build:
  #     context: ./hive
  #     dockerfile: Dockerfile
  #   container_name: hive
  #   image: local/hive:3.0.0
  #   profiles: ["hive"]
  #   ports:
  #     - '9083:9083'      
  #   depends_on:
  #     - postgres
  #     - minio
  #   networks:
  #     - delta-net

  # minio:
  #   build:
  #     context: ./minio
  #     dockerfile: Dockerfile
  #   container_name: minio
  #   image: local/minio:linux-arm64
  #   environment:
  #     MINIO_ROOT_USER: minio
  #     MINIO_ROOT_PASSWORD: minio123
  #   ports:
  #     - '9000:9000'
  #     - "9001:9001"
  #   volumes:
  #     - ./.storage/minio:/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  #   networks:
  #     delta-net:
  #       ipv4_address: 172.16.0.2
  
  # superset:
  #   # image: arezamoosavi/superset:latest
  #   # image: apache/superset:latest
  #   build:
  #     context: ./superset
  #     dockerfile: Dockerfile
  #   image: local/superset:2.1.0
  #   container_name: superset
  #   env_file: ./superset/.env-non-dev
  #   # environment:
  #   #   SUPERSET_SECRET_KEY: thisismysecretkey
  #   #   # SQLALCHEMY_DATABASE_URI: 'sqlite:////superset/superset.db'
  #   #   SQLALCHEMY_DATABASE_URI: 'postgresql+psycopg2://superset:superset@127.0.0.1:5432/superset'
  #   #   SUPERSET__SQLALCHEMY_DATABASE_URI: 'postgresql+psycopg2://superset:superset@127.0.0.1:5432/superset'
  #   #   WTF_CSRF_ENABLED: True
  #   #   # WTF_CSRF_EXEMPT_LIST: Null
  #   #   MAPBOX_API_KEY: ''
  #   ports:
  #     - 8088:8088
  #   volumes:
  #     - ./.storage/superset:/superset
  #   # restart: unless-stopped
  #   depends_on:
  #     - postgres
  #   links:
  #     - postgres

  # trino-coordinator:
  #   container_name: trino-coordinator
  #   image: local/trino
  #   build:
  #     context: ./trino
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./trino/coordinator_config.properties:/usr/trino/etc/config.properties
  #     - ./trino/etc/catalog:/usr/trino/etc/catalog

  # trino-worker:
  #   container_name: trino-worker
  #   image: local/trino
  #   build:
  #     context: ./trino
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./trino/worker_config.properties:/usr/trino/etc/config.properties
  #     - ./trino/etc/catalog:/usr/trino/etc/catalog

networks:
  delta-net: 
    name: 'delta-net'
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.0.0/24
          gateway: 172.16.0.1